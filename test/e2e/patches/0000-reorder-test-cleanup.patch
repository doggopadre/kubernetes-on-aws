diff --git a/test/e2e/storage/empty_dir_wrapper.go b/test/e2e/storage/empty_dir_wrapper.go
index ff6fcb30..d335ea61 100644
--- a/test/e2e/storage/empty_dir_wrapper.go
+++ b/test/e2e/storage/empty_dir_wrapper.go
@@ -148,6 +148,10 @@ var _ = utils.SIGDescribe("EmptyDir wrapper volumes", func() {
 		}
 		pod = e2epod.NewPodClient(f).CreateSync(ctx, pod)
 		ginkgo.DeferCleanup(func(ctx context.Context) {
+			ginkgo.By("Cleaning up the pod")
+			if err = f.ClientSet.CoreV1().Pods(f.Namespace.Name).Delete(ctx, pod.Name, *metav1.NewDeleteOptions(0)); err != nil {
+				framework.Failf("unable to delete pod %v: %v", pod.Name, err)
+			}
 			ginkgo.By("Cleaning up the secret")
 			if err := f.ClientSet.CoreV1().Secrets(f.Namespace.Name).Delete(ctx, secret.Name, metav1.DeleteOptions{}); err != nil {
 				framework.Failf("unable to delete secret %v: %v", secret.Name, err)
@@ -156,10 +160,6 @@ var _ = utils.SIGDescribe("EmptyDir wrapper volumes", func() {
 			if err := f.ClientSet.CoreV1().ConfigMaps(f.Namespace.Name).Delete(ctx, configMap.Name, metav1.DeleteOptions{}); err != nil {
 				framework.Failf("unable to delete configmap %v: %v", configMap.Name, err)
 			}
-			ginkgo.By("Cleaning up the pod")
-			if err = f.ClientSet.CoreV1().Pods(f.Namespace.Name).Delete(ctx, pod.Name, *metav1.NewDeleteOptions(0)); err != nil {
-				framework.Failf("unable to delete pod %v: %v", pod.Name, err)
-			}
 		})
 	})
 
